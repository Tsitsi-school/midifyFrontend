const handleFileDrop = async (files) => {
  if (!files || files.length === 0) {
    console.error('No files provided.');
    return;
  }

  const file = files[0];
  const formData = new FormData();
  formData.append('file', file);
  formData.append('name', file.name); // Add name field
  formData.append('date', new Date().toISOString()); // Add date field (ISO format)

  try {
    setIsUploading(true);
    const token = localStorage.getItem('authToken'); // Retrieve the token
    const response = await apiClient.post('/upload/', formData, {
      headers: {
        'Content-Type': 'multipart/form-data',
        ...(token && { Authorization: `Token ${token}` }), // Include token only if it exists
      },
    });
    console.log('File uploaded successfully:', response.data);
    const uploadedFile = {
      ...response.data, // File data from the backend
      name: file.name,
      size: file.size,  // Size in bytes from the file object
    };
    setUploadedFiles((prevFiles) => [...prevFiles, uploadedFile]);
  } catch (error) {
    console.error('Error uploading file:', error.response?.data || error.message);
  } finally {
    setIsUploading(false);
  }
};
